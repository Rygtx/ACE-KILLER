---
description: 
globs: 
alwaysApply: false
---
# ACE反作弊服务卸载

ACE-KILLER 提供一键卸载ACE反作弊服务功能，帮助用户完全移除系统中的ACE反作弊组件。

## 功能概述

ACE反作弊服务卸载功能在 [ui/main_window.py](mdc:ui/main_window.py) 中实现，主要功能包括：

1. 扫描并检测系统中的ACE相关服务
2. 停止正在运行的服务
3. 删除服务注册表项
4. 删除相关驱动文件

## 服务类型

ACE反作弊主要包含以下服务组件：

1. **AntiCheatExpert Service** - 用户模式服务，负责ACE反作弊的主要功能
2. **AntiCheatExpert Protection** - 反作弊保护组件
3. **ACE-BASE** - 内核模式驱动，负责系统级反作弊监控
4. **ACE-GAME** - 内核模式驱动，负责游戏内反作弊监控

## 卸载流程

服务卸载功能执行以下流程：

```
1. 检测系统中的ACE相关服务
2. 创建卸载任务列表
3. 显示确认对话框，说明风险
4. 执行卸载流程:
   a. 停止服务运行
   b. 删除服务注册项
   c. 删除服务驱动文件
5. 向用户显示卸载结果
```

## 实现方式

服务卸载功能使用Windows服务管理API实现：

```python
@Slot()
def delete_ace_services(self):
    """删除ACE反作弊相关服务"""
    # 警告对话框
    reply = QMessageBox.warning(
        self,
        "警告 - 卸载ACE反作弊服务",
        "此操作将卸载ACE反作弊服务，可能会影响游戏运行。\n"
        "建议仅在必要时执行，卸载后可能需要重新安装游戏。\n\n"
        "确定要继续吗?",
        QMessageBox.Yes | QMessageBox.No,
        QMessageBox.No
    )
    
    if reply != QMessageBox.Yes:
        return
    
    # 准备服务列表
    services = [
        "AntiCheatExpert Service",
        "AntiCheatExpert Protection",
        "ACE-BASE",
        "ACE-GAME"
    ]
    
    # 创建进度对话框
    progress = QProgressDialog("正在卸载ACE反作弊服务...", "取消", 0, len(services), self)
    progress.setWindowTitle("卸载ACE反作弊服务")
    progress.setWindowModality(Qt.WindowModal)
    progress.show()
    
    # 创建线程删除服务
    delete_thread = threading.Thread(
        target=self._delete_services_thread,
        args=(services, progress)
    )
    delete_thread.daemon = True
    delete_thread.start()
```

## 注意事项

1. **管理员权限** - 卸载服务需要管理员权限
2. **游戏兼容性** - 卸载服务可能导致游戏无法启动
3. **系统重启** - 部分服务卸载后可能需要重启系统生效
4. **重新安装** - 如需再次使用游戏，可能需要重新安装游戏或修复游戏文件

