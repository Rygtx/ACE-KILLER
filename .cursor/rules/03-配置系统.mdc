---
description: 
globs: 
alwaysApply: false
---
# 配置系统

ACE-KILLER 使用 YAML 格式的配置文件来管理应用程序设置、内存清理和I/O优先级设置。

## 配置文件位置

配置文件存储在用户主目录的 `.ace-killer/config.yaml` 下：

```python
# 在 config/config_manager.py 中定义
self.config_dir = os.path.join(os.path.expanduser("~"), ".ace-killer")
self.config_file = os.path.join(self.config_dir, "config.yaml")
```

## 配置结构

配置文件包含以下主要部分：

```yaml
notifications:
  enabled: true               # 是否启用 Windows 通知
  
logging:
  retention_days: 7           # 日志保留天数
  rotation: '1 day'           # 日志轮转周期
  debug_mode: false           # 是否启用调试模式
  
application:
  auto_start: false           # 是否开机自启动
  
memory_cleaner:
  enabled: false              # 是否启用内存清理
  brute_mode: true            # 是否启用暴力清理模式
  switches: [false, false, false, true, true, false]  # 内存清理选项
  interval: 300               # 内存清理间隔(秒)
  threshold: 80.0             # 内存占用触发阈值(百分比)
  cooldown: 60                # 内存清理冷却时间(秒)
  
io_priority:
  processes:                  # 需要设置I/O优先级的进程列表
    - name: 'SGuard64.exe'    # 进程名称
      priority: 0             # I/O优先级(0-7)
    - name: 'ACE-Tray.exe' 
      priority: 0
```

## 配置管理

配置通过 [config/config_manager.py](mdc:config/config_manager.py) 中的 `ConfigManager` 类管理：

- `load_config()` - 加载配置，如果不存在则创建默认配置
- `save_config()` - 保存当前配置到文件
- `_create_default_config()` - 创建默认配置文件
- `_ensure_directories()` - 确保配置和日志目录存在

## 内存清理配置

内存清理配置说明：
- `enabled` - 是否启用内存清理功能
- `brute_mode` - 是否使用暴力模式清理
- `switches` - 不同内存清理方法的开关设置，对应6种不同的清理方式
- `interval` - 自动清理的时间间隔(秒)，最小值60秒
- `threshold` - 内存占用触发清理的阈值(百分比)，范围30%-95%
- `cooldown` - 两次清理之间的冷却时间(秒)，最小值30秒

## I/O优先级配置

I/O优先级配置允许为特定进程设置I/O优先级，优化系统资源分配：
- `processes` - 进程列表，包含需要设置I/O优先级的进程名称和优先级
  - `name` - 进程名称(区分大小写)
  - `priority` - I/O优先级值(0-7)，0为最高优先级


